{"version":3,"sources":["components/FeedbackOptions/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/App/App.jsx","index.js"],"names":["Section","title","children","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","key","onClick","type","style","textTransform","Statistics","good","neutral","bad","total","positivePercentage","App","state","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PASeA,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,gCACE,6BAAKD,IACJC,MCoBQC,EArBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,cAAC,EAAD,CAASJ,MAAM,wBAAf,SACGK,OAAOC,KAAKH,GAASI,KAAI,SAACC,GAAD,OACxB,wBAEEC,QAAS,kBAAML,EAAgBI,IAC/BE,KAAK,SACLC,MAAO,CAAEC,cAAe,cAJ1B,SAMGJ,GALIA,SC0BAK,EAhCI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,gCACE,4CACA,+BACE,6BACE,uCAAUJ,OAEZ,6BACE,0CAAaC,OAEf,6BACE,sCAASC,OAEX,6BACE,wCAAWC,OAEb,6BACE,oDAAuBC,EAAvB,gBCfJC,E,4MACJC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPZ,gBAAkB,SAACD,GACjB,EAAKkB,UAAS,SAACC,GAAD,sBAAmBnB,EAAUmB,EAAUnB,GAAW,O,EAGlEoB,mBAAqB,WACnB,OAAO,EAAKH,MAAMJ,IAAM,EAAKI,MAAML,QAAU,EAAKK,MAAMN,M,EAE1DU,gCAAkC,WAChC,OACE,EAAKD,sBACLE,KAAKC,MAAO,EAAKN,MAAMN,KAAO,EAAKS,qBAAwB,M,4CAG/D,WACE,OACE,gCACE,cAAC,EAAD,CACEpB,QAASwB,KAAKP,MACdhB,gBAAiBuB,KAAKvB,kBAGxB,cAAC,EAAD,CACEU,KAAMa,KAAKP,MAAMN,KACjBC,QAASY,KAAKP,MAAML,QACpBC,IAAKW,KAAKP,MAAMJ,IAChBC,MAAOU,KAAKJ,qBACZL,mBAAoBS,KAAKH,2C,GAjCjBI,aAwCHT,ICxCfU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b9b94328.chunk.js","sourcesContent":["const Section = ({ title, children }) => {\n  return (\n    <div>\n      <h1>{title}</h1>\n      {children}\n    </div>\n  );\n};\n\nexport default Section;\n","import Section from \"./Section/Section\";\nimport PropTypes from \"prop-types\";\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <Section title=\"Please leave feedback\">\n      {Object.keys(options).map((key) => (\n        <button\n          key={key}\n          onClick={() => onLeaveFeedback(key)}\n          type=\"button\"\n          style={{ textTransform: \"capitalize\" }}\n        >\n          {key}\n        </button>\n      ))}\n    </Section>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.object,\n  onLeaveFeedback: PropTypes.func,\n};\nexport default FeedbackOptions;\n","import PropTypes from \"prop-types\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <div>\n      <h2>Statistics</h2>\n      <ul>\n        <li>\n          <p>Good: {good}</p>\n        </li>\n        <li>\n          <p>Neutral: {neutral}</p>\n        </li>\n        <li>\n          <p>Bad: {bad}</p>\n        </li>\n        <li>\n          <p>Total: {total}</p>\n        </li>\n        <li>\n          <p>Positive feetback: {positivePercentage}%</p>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\nexport default Statistics;\n","import { Component } from \"react\";\n\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"../Statistics/Statistics\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = (options) => {\n    this.setState((prevState) => ({ [options]: prevState[options] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    return this.state.bad + this.state.neutral + this.state.good;\n  };\n  countPositiveFeedbackPercentage = () => {\n    return (\n      this.countTotalFeedback() &&\n      Math.round((this.state.good / this.countTotalFeedback()) * 100)\n    );\n  };\n  render() {\n    return (\n      <div>\n        <FeedbackOptions\n          options={this.state}\n          onLeaveFeedback={this.onLeaveFeedback}\n        ></FeedbackOptions>\n\n        <Statistics\n          good={this.state.good}\n          neutral={this.state.neutral}\n          bad={this.state.bad}\n          total={this.countTotalFeedback()}\n          positivePercentage={this.countPositiveFeedbackPercentage()}\n        ></Statistics>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}